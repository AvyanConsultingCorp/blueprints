{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "numberOfInstances": {
      "type": "int",
      "metadata": {
        "description": "Number of VMs to deploy"
      }
    },
    "subnetDcRef": {
      "type": "string",
      "metadata": {
        "description": "Id of the domain controller subnet where AD VMs are to be created"
      }
    },
    "subnetSqlRef": {
      "type": "string",
      "metadata": {
        "description": "Id of the SQL subnet where SQL VMs are to be created"
      }
    },
    "lbFrontendPrivateIp": {
      "type": "string",
      "metadata": {
        "description": "Private IP address of the frontend configuration of load balancer"
      }
    },
    "networkInterfacePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix of the network interfaces"
      }
    },
    "loadBalancerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the load balancer"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "vm",
      "metadata": {
        "description": "Prefix to use for VM names"
      }
    },
    "vmStorageAccountContainerName": {
      "type": "string",
      "defaultValue": "datavhd",
      "metadata": {
        "description": "This is the storage account container name"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage account name"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "This is the allowed list of VM sizes"
      }
    },
    "projectName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of this project"
      }
    },
    "sqlStaticIp": {
      "type": "string",
      "metadata": {
        "description": "Static IP of the Sql server"
      }
    },
    "appName": {
      "type": "string",
      "metadata": {
        "description": "App name to be used for SQL configuration"
      }
    },
    "dnsServers": {
      "type": "array",
      "metadata": {
        "description": "DNS addresses for the DC VMs."
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network name."
      }
    },
    "vnetAddressPrefixes": {
      "type": "array",
      "metadata": {
        "description": "Virtual network address prefixes."
      }
    },
    "vnetFrontendSubnet": {
      "type": "object",
      "metadata": {
        "description": "Name and prefix of the frontend subnet in the VNET. Please note, an additional subnet called GatewaySubnet will be created where the VirtualNetworkGateway will be deployed. The name of that subnet must not be changed from GatewaySubnet."
      }
    },
    "vnetBackendSubnetDc": {
      "type": "object",
      "metadata": {
        "description": "Name and prefix of the domain controller backend subnet in the VNET. Please note, an additional subnet called GatewaySubnet will be created where the VirtualNetworkGateway will be deployed. The name of that subnet must not be changed from GatewaySubnet."
      }
    },
    "vnetBackendSubnetSql": {
      "type": "object",
      "metadata": {
        "description": "Name and prefix of the SQL backend subnet in the VNET. Please note, an additional subnet called GatewaySubnet will be created where the VirtualNetworkGateway will be deployed. The name of that subnet must not be changed from GatewaySubnet."
      }
    },
    "vnetGatewaySubnet": {
      "type": "object",
      "metadata": {
        "description": "Name and prefix for the GatewaySubnet where the VirtualNetworkGateway will be deployed. This must be at least /29."
      }
    }
  },
  "variables": {
    "dcAvailabilitySetName": "dcAvSet",
    "sqlAvailabilitySetName": "sqlAvSet",
    "storageAccountType": "Standard_LRS",
    "lbId": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",
    "sqlAlwaysOnConfigScriptFolder": "[concat(parameters('projectName'), '/', 'customScripts')]",
    "sqlAlwaysOnConfigScriptFileName": "SqlServerConfig_",
    "storageAccountUniqueName": "[concat(parameters('storageAccountName'), uniqueString(resourceGroup().id))]",
    "sqlDomainName": "poltergeist.local",
    "sqlDomainLogin": "[concat(split(variables('sqlDomainName'),'.')[0], '\\', parameters('adminUsername'))]",
    "clusterName": "app1cluster",
    "lbBackendPool": "[concat(parameters('loadBalancerName'),'-pool')]",
    "lbFrontendIpName": "[concat(parameters('loadBalancerName'),'-fe')]",
    "vmSettings": {
      "vmName": [
        "[concat(parameters('vmNamePrefix'),'-', 'pdc')]",
        "[concat(parameters('vmNamePrefix'),'-', 'bdc')]",
        "[concat(parameters('vmNamePrefix'),'-', 'sql-1')]",
        "[concat(parameters('vmNamePrefix'),'-', 'sql-2')]",
        "[concat(parameters('vmNamePrefix'),'-', 'fsw')]"
      ],
      "vmImage": [
        {
          "publisher": "MicrosoftWindowsServer",
          "offer": "WindowsServer",
          "sku": "2012-R2-Datacenter"
        },
        {
          "publisher": "MicrosoftWindowsServer",
          "offer": "WindowsServer",
          "sku": "2012-R2-Datacenter"
        },
        {
          "publisher": "MicrosoftSQLServer",
          "offer": "SQL2014SP1-WS2012R2",
          "sku": "Enterprise"
        },
        {
          "publisher": "MicrosoftSQLServer",
          "offer": "SQL2014SP1-WS2012R2",
          "sku": "Enterprise"
        },
        {
          "publisher": "MicrosoftWindowsServer",
          "offer": "WindowsServer",
          "sku": "2012-R2-Datacenter"
        }
      ],
      "psArgument": [
        "[concat(' -SafeModePassword QAZwsx123 -Domain ', variables('sqlDomainName'))]",
        "[concat(' -SafeModePassword QAZwsx123 -Domain ', variables('sqlDomainName'),' -AdminUser ', variables('sqlDomainLogin'),' -AdminPassword ', parameters('adminPassword'))]",
        "[concat(' -Domain ', variables('sqlDomainName'),' -AdminUser ', variables('sqlDomainLogin'),' -AdminPassword ', parameters('adminPassword'), ' -AppName ', parameters('appName'), ' -ClusterName ', variables('clusterName'), ' -StaticIp ', parameters('sqlStaticIp'))]",
        "[concat(' -Domain ', variables('sqlDomainName'),' -AdminUser ', variables('sqlDomainLogin'),' -AdminPassword ', parameters('adminPassword'), ' -AppName ', parameters('appName'), ' -ClusterName ', variables('clusterName'), ' -StaticIp ', parameters('sqlStaticIp'))]",
        "[concat(' -Domain ', variables('sqlDomainName'),' -AdminUser ', variables('sqlDomainLogin'),' -AdminPassword ', parameters('adminPassword'), ' -ClusterName ', variables('clusterName'))]"
      ]
    }
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountUniqueName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      },
      "tags": {
        "displayName": "StorageAccounts"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('dcAvailabilitySetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 5
      },
      "tags": {
        "displayName": "AvailabilitySet DC"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('sqlAvailabilitySetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 5
      },
      "tags": {
        "displayName": "AvailabilitySet SQL"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('networkInterfacePrefix'), '0')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('dnsServers')[0]]",
              "subnet": {
                "id": "[parameters('subnetDcRef')]"
              }
            }
          }
        ]
      },
      "tags": {
        "displayName": "NetworkInterfaces PDC"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('networkInterfacePrefix'), '1')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('dnsServers')[1]]",
              "subnet": {
                "id": "[parameters('subnetDcRef')]"
              }
            }
          }
        ]
      },
      "tags": {
        "displayName": "NetworkInterfaces BDC"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('networkInterfacePrefix'), '2')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetSqlRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/', variables('lbBackendPool'))]"
                }
              ]
            }
          }
        ]
      },
      "tags": {
        "displayName": "NetworkInterfaces Sql-1"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('networkInterfacePrefix'), '3')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetSqlRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/', variables('lbBackendPool'))]"
                }
              ]
            }
          }
        ]
      },
      "tags": {
        "displayName": "NetworkInterfaces Sql-2"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('networkInterfacePrefix'), '4')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetSqlRef')]"
              }
            }
          }
        ]
      },
      "tags": {
        "displayName": "NetworkInterfaces FSW"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[parameters('subnetSqlRef')]"
              },
              "privateIPAddress": "[parameters('lbFrontendPrivateIp')]",
              "privateIPAllocationMethod": "Static"
            },
            "name": "[variables('lbFrontendIpName')]"
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbBackendPool')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "sqlAlwaysOnListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/', variables('lbFrontendIpName'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', variables('lbBackendPool'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 1433,
              "backendPort": 1433,
              "enableFloatingIP": true
            }
          }
        ],
        "probes": [
          {
            "name": "sqlAlwaysOnProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 59999,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      },
      "tags": {
        "displayName": "LoadBalancer"
      }
    },
    {
      "name": "deploy-pdc-vm",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('storageAccountUniqueName')]",
        "[concat(parameters('networkInterfacePrefix'), '0')]",
        "[variables('dcAvailabilitySetName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'configure-dc-vm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[variables('vmSettings').vmName[0]]" },
          "storageAccountName": { "value": "[variables('storageAccountUniqueName')]" },
          "nicName": { "value": "[concat(parameters('networkInterfacePrefix'), '0')]" },
          "avSetName": { "value": "[variables('dcAvailabilitySetName')]" },
          "vmSize": { "value": "[parameters('vmSize')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "vmStorageAccountContainerName": { "value": "[parameters('vmStorageAccountContainerName')]" },
          "scriptName": { "value": "CreatePrimaryDc" },
          "scriptUri": { "value": "[concat(uri(deployment().properties.templateLink.uri, variables('sqlAlwaysOnConfigScriptFolder')),'/', variables('sqlAlwaysOnConfigScriptFileName'),'1.ps1')]" },
          "scriptCommand": { "value": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('sqlAlwaysOnConfigScriptFileName'), '1.ps1 ', variables('vmSettings').psArgument[0])]" }
        }
      }
    },
    {
      "name": "update-vnet-dns-1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/deploy-pdc-vm"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'configure-vnet-dns-server.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetAddressPrefixes": {
            "value": "[parameters('vnetAddressPrefixes')]"
          },
          "vnetFrontendSubnet": {
            "value": "[parameters('vnetFrontendSubnet')]"
          },
          "vnetBackendSubnetDc": {
            "value": "[parameters('vnetBackendSubnetDc')]"
          },
          "vnetBackendSubnetSql": {
            "value": "[parameters('vnetBackendSubnetSql')]"
          },
          "vnetGatewaySubnet": {
            "value": "[parameters('vnetGatewaySubnet')]"
          },
          "dnsServers": {
            "value": [
              "[parameters('dnsServers')[0]]"
            ]
          }
        }
      }
    },
    {
      "name": "update-bdc-nic",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/update-vnet-dns-1"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'configure-nic.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "nicName": {
            "value": "[concat(parameters('networkInterfacePrefix'), '1')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Static",
                  "privateIPAddress": "[parameters('dnsServers')[1]]",
                  "subnet": {
                    "id": "[parameters('subnetDcRef')]"
                  }
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[parameters('dnsServers')[0]]"
            ]
          }
        }
      }
    },
    {
      "name": "deploy-bdc-vm",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/deploy-pdc-vm",
        "Microsoft.Resources/deployments/update-vnet-dns-1",
        "Microsoft.Resources/deployments/update-bdc-nic",
        "Microsoft.Resources/deployments/update-bdc-nic"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'configure-dc-vm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[variables('vmSettings').vmName[1]]" },
          "storageAccountName": { "value": "[variables('storageAccountUniqueName')]" },
          "nicName": { "value": "[concat(parameters('networkInterfacePrefix'), '1')]" },
          "avSetName": { "value": "[variables('dcAvailabilitySetName')]" },
          "vmSize": { "value": "[parameters('vmSize')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "vmStorageAccountContainerName": { "value": "[parameters('vmStorageAccountContainerName')]" },
          "scriptName": { "value": "CreateBackupDc" },
          "scriptUri": { "value": "[concat(uri(deployment().properties.templateLink.uri, variables('sqlAlwaysOnConfigScriptFolder')),'/', variables('sqlAlwaysOnConfigScriptFileName'),'2.ps1')]" },
          "scriptCommand": { "value": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('sqlAlwaysOnConfigScriptFileName'), '2.ps1 ', variables('vmSettings').psArgument[1])]" }
        }
      }
    },
    {
      "name": "update-vnet-dns-2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/deploy-bdc-vm"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'configure-vnet-dns-server.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetAddressPrefixes": {
            "value": "[parameters('vnetAddressPrefixes')]"
          },
          "vnetFrontendSubnet": {
            "value": "[parameters('vnetFrontendSubnet')]"
          },
          "vnetBackendSubnetDc": {
            "value": "[parameters('vnetBackendSubnetDc')]"
          },
          "vnetBackendSubnetSql": {
            "value": "[parameters('vnetBackendSubnetSql')]"
          },
          "vnetGatewaySubnet": {
            "value": "[parameters('vnetGatewaySubnet')]"
          },
          "dnsServers": {
            "value": "[parameters('dnsServers')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmSettings').vmName[copyindex(2)]]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('storageAccountUniqueName')]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfacePrefix'), copyindex(2))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('sqlAvailabilitySetName'))]",
        "Microsoft.Resources/deployments/deploy-pdc-vm",
        "Microsoft.Resources/deployments/update-vnet-dns-1",
        "Microsoft.Resources/deployments/update-bdc-nic",
        "Microsoft.Resources/deployments/deploy-bdc-vm",
        "Microsoft.Resources/deployments/update-vnet-dns-2"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('sqlAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmSettings').vmName[copyindex(2)]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmSettings').vmImage[copyIndex(2)].publisher]",
            "offer": "[variables('vmSettings').vmImage[copyIndex(2)].offer]",
            "sku": "[variables('vmSettings').vmImage[copyIndex(2)].sku]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountUniqueName'),'.blob.core.windows.net/vhds/', variables('vmSettings').vmName[copyindex(2)], '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountUniqueName'),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/', variables('vmSettings').vmName[copyindex(2)],'data-1.vhd')]"
              },
              "name": "[concat(variables('vmSettings').vmName[copyindex(2)],'-data-disk1')]",
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "128",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('networkInterfacePrefix'),copyindex(2)))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountUniqueName'), '.blob.core.windows.net')]"
          }
        }
      },
      "tags": {
        "displayName": "VirtualMachines"
      },
      "resources": [
        {
          "name": "[concat('SqlAlwaysOnConfig-', variables('vmSettings').vmName[copyindex(2)])]",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').vmName[copyindex(2)])]"
          ],
          "tags": {
            "displayName": "SqlAlwaysOnConfig"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(uri(deployment().properties.templateLink.uri, variables('sqlAlwaysOnConfigScriptFolder')),'/', variables('sqlAlwaysOnConfigScriptFileName'),copyIndex(3),'.ps1')]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('sqlAlwaysOnConfigScriptFileName'), copyIndex(3),'.ps1 ', variables('vmSettings').psArgument[copyindex(2)])]"
            }
          }
        }
      ]
    }
  ]
}


