{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "string",
      "maxLength": 10,
      "defaultValue": "vpn",
      "metadata": { "description": "Prefix used for all resources created by this template." }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": { "description": "Address prefix for virtual network in CIDR format." }
    },
    "subnetNamePrefix": {
      "type": "string",
      "defaultValue": "frontend",
      "metadata": { "description": "Name prefix for subnet. The subnet name will be <baseName><subnetNamePrefix>-sn" }
    },
    "subnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": { "description": "Address prefix for subnet in CIDR format." }
    },
    "gatewaySubnetAddressPrefix": {
      "type": "string",
      "metadata": { "description": "Subnet prefix used for the GatewaySubnet." }
    },
    "vpnType": {
      "type": "string",
      "allowedValues": [
        "RouteBased",
        "PolicyBased"
      ],
      "defaultValue": "RouteBased",
      "metadata": { "description": "Type of VPN gatgeway, which must coincide with the type of VPM appliance on-premises." }
    },
    "onPremisesPIP": {
      "type": "string",
      "metadata": { "description": "Public IP address for you on-premises VPN appliance." }
    },
    "onPremisesAddressSpace": {
      "type": "string",
      "metadata": { "description": "Address prefix for your on-premises network in CIDR format." }
    },
    "sharedKey": {
      "type": "string",
      "metadata": { "description": "Shared key for VPN devices authentication." }
    },
    "testVMNamePrefix": {
      "type": "string",
      "defaultValue": "test",
      "maxLength": 15,
      "metadata": { "description": "Name prefix for virtual machine used for connectivity testing." }
    },
    "osType": {
      "type": "string",
      "allowedValues": [
        "Windows",
        "Ubuntu"
      ],
      "defaultValue": "Ubuntu",
      "metadata": { "description": "Operating system for virtual machine used for connectivity testing." }
    },
    "adminUsername": {
      "type": "string",
      "metadata": { "description": "Admin username for virtual machine used for connectivity testing." }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": { "description": "Admin password for virtual machine used for connectivity testing." }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vmStorageAccountName": "[concat(toLower(parameters('testVMNamePrefix')),'stg')]",
    "vnetTemplateUri": "https://raw.githubusercontent.com/mspnp/blueprints/master/ARMBuildingBlocks/ARMBuildingBlocks/Templates/bb-vnet-1subnet.json",
    "vmTemplateUri": "https://raw.githubusercontent.com/mspnp/blueprints/master/ARMBuildingBlocks/ARMBuildingBlocks/Templates/bb-vm-1nic.json",
    "vpnTemplateUri": "https://raw.githubusercontent.com/mspnp/blueprints/master/ARMBuildingBlocks/ARMBuildingBlocks/Templates/bb-vpn-gateway-connection.json"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "vnet",
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('vnetTemplateUri')]" },
        "parameters": {
          "baseName": { "value": "[parameters('baseName')]" },
          "vnetAddressPrefix": { "value": "[parameters('vnetAddressPrefix')]" },
          "subnetNamePrefix": { "value": "[parameters('subnetNamePrefix')]" },
          "subnetAddressPrefix": { "value": "[parameters('subnetAddressPrefix')]" }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "name": "[variables('vmStorageAccountName')]",
      "properties": {"accountType": "Premium_LRS"}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "test-vm",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('vmStorageAccountName'))]",
        "Microsoft.Resources/deployments/vnet"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('vmTemplateUri')]" },
        "parameters": {
          "baseName": { "value": "[parameters('baseName')]" },
          "vmNamePrefix": { "value": "[parameters('testVMNamePrefix')]" },
          "vmComputerName": { "value": "[parameters('testVMNamePrefix')]" },
          "vmSize": { "value": "Standard_DS1" },
          "snid": { "value": "[reference('vnet').outputs.subnetId.value]" },
          "stgAccountName": { "value": "[variables('vmStorageAccountName')]" },
          "osType": { "value": "[parameters('osType')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "vpn",
      "dependsOn": [
        "Microsoft.Resources/deployments/vnet",
        "Microsoft.Resources/deployments/vm"
      ]
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('vpnTemplateUri')]" },
        "parameters": {
          "baseName": { "value": "[parameters('baseName')]" },
          "vnetName": { "value": "[reference('vnet').outputs.vnetName.value]" },
          "gatewaySubnetAddressPrefix": { "value": "[parameters('gatewaySubnetAddressPrefix')]" },
          "vpnType": { "value": "[parameters('vpnType')]" },
          "onPremisesPIP": { "value": "[reference('vnet').outputs.subnetId.value]" },
          "stgAccountName": { "value": "[parameters('onPremisesPIP')]" },
          "onPremisesAddressSpace": { "value": "[parameters('onPremisesAddressSpace')]" },
          "sharedKey": { "value": "[parameters('sharedKey')]" }
        }
      }
    }
  ],
  "outputs": {
  }
}
