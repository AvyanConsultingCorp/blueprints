{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": { "type": "string" },
    "feSubnetId": { "type": "string" },
    "beSubnetId": { "type": "string" },
    "mgmtSubnetId": { "type": "string" },
    "mgmtSubnetPrefix": { "type": "string" },
    "vnetPrefix": { "type": "string" },
    "ilbIpAddress": { "type": "string" },
    "adminUsername": { "type": "string" },
    "adminPassword": { "type": "securestring" },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2"
      ]
    },
    "vmIPaddress1Array": {
      "type": "array",
      "defaultValue": [
        "10.0.0.29",
        "10.0.0.28"
      ]
    },
    "vmIPaddress2Array": {
      "type": "array",
      "defaultValue": [
        "10.0.0.62",
        "10.0.0.61"
      ]
    },
    "vmIPaddress3Array": {
      "type": "array",
      "defaultValue": [
        "10.0.0.253",
        "10.0.0.252"
      ]
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vmNamePrefix": "nva",
    "vmComputerNamePrefix": "nva",
    "numVMs": 2,
    "osType": "Ubuntu",
    "lbName": "[concat(parameters('baseName'),'-nva-ilb')]",
    "ilbId": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "ilbFEName": "feIpConfig1",
    "ilbFEId": "[concat(variables('ilbId'),'/frontendIPConfigurations/',variables('ilbFEName'))]",
    "ilbBEName": "beAddPool",
    "ilbBEId": "[concat(variables('ilbId'),'/backendAddressPools/',variables('ilbBEName'))]",
    "uniqueString": "[uniqueString(resourceGroup().Id)]",
    "vmAvSetName": "[concat(parameters('baseName'),'-',variables('vmNamePrefix'),'-as')]",
    "vmsTemplate": "https://raw.githubusercontent.com/mspnp/blueprints/master/ARMBuildingBlocks/ARMBuildingBlocks/Templates/bb-vms-3nics-lbbe.json",
    "extensionTemplate": "https://raw.githubusercontent.com/mspnp/blueprints/master/ARMBuildingBlocks/ARMBuildingBlocks/Templates/bb-custom-linux-extension.json",
    "scriptUri": "https://raw.githubusercontent.com/mspnp/blueprints/master/ARMBuildingBlocks/ARMBuildingBlocks/Scripts/nva.sh",
    "scriptName": "nva.sh",
    "udrName": "[concat(parameters('baseName'), '-gw-udr')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2016-03-30",
      "location": "[variables('location')]",
      "name": "[variables('lbName')]",
      "tags": {
        "displayName": "Load balancer"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "feIpConfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('ilbIpAddress')]",
              "subnet": { "id": "[parameters('feSubnetId')]" }
            }
          }
        ],
        "backendAddressPools": [ { "name": "[variables('ilbBEName')]" } ],
        "loadBalancingRules": [
          {
            "name": "http",
            "properties": {
              "frontendIPConfiguration": { "id": "[variables('ilbFEId')]" },
              "backendAddressPool": { "id": "[variables('ilbBEId')]" },
              "frontendPort": 80,
              "backendPort": 80,
              "protocol": "Tcp"
            }
          },
          {
            "name": "https",
            "properties": {
              "frontendIPConfiguration": { "id": "[variables('ilbFEId')]" },
              "backendAddressPool": { "id": "[variables('ilbBEId')]" },
              "frontendPort": 443,
              "backendPort": 443,
              "protocol": "Tcp"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "name": "[variables('vmAvSetName')]",
      "tags": {
        "displayName": "Availability set"
      },
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 5
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "name": "[toLower(concat(replace(parameters('baseName'),'-',''), copyindex(1), variables('uniqueString')))]",
      "tags": {
        "displayName": "Storage accounts"
      },
      "copy": {
        "name": "stgCount",
        "count": "[variables('numVms')]"
      },
      "properties": { "accountType": "Premium_LRS" }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2016-03-30",
      "location": "[variables('location')]",
      "name": "[variables('udrName')]",
      "properties": {
        "routes": [
          {
            "name": "toFrontEnd",
            "properties": {
              "addressPrefix": "[parameters('vnetPrefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('ilbIpAddress')]"
            }
          },
          {
            "name": "toMgmt",
            "properties": {
              "addressPrefix": "[parameters('mgmtSubnetPrefix')]",
              "nextHopType": "VnetLocal"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "nvas",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/',variables('lbName'))]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('vmAvSetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/',parameters('baseName'),'1',variables('uniqueString'))]",
        "[concat('Microsoft.Storage/storageAccounts/',parameters('baseName'),'2',variables('uniqueString'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('vmsTemplate')]" },
        "parameters": {
          "baseName": { "value": "[parameters('baseName')]" },
          "vmNamePrefix": { "value": "[variables('vmNamePrefix')]" },
          "vmComputerNamePrefix": { "value": "[variables('vmComputerNamePrefix')]" },
          "vmSize": { "value": "[parameters('vmSize')]" },
          "vmIPaddress1Array": { "value": "[parameters('vmIPaddress1Array')]" },
          "vmIPaddress2Array": { "value": "[parameters('vmIPaddress2Array')]" },
          "vmIPaddress3Array": { "value": "[parameters('vmIPaddress3Array')]" },
          "snid1": { "value": "[parameters('feSubnetId')]" },
          "snid2": { "value": "[parameters('beSubnetId')]" },
          "snid3": { "value": "[parameters('mgmtSubnetId')]" },
          "nic1IpForwarding": { "value": true },
          "nic2IpForwarding": { "value": true },
          "lbBackendPoolId": { "value": "[variables('ilbBEId')]" },
          "stgAccountNames": {
            "value": [
              "[concat(parameters('baseName'),'1',variables('uniqueString'))]",
              "[concat(parameters('baseName'),'2',variables('uniqueString'))]"
            ]
          },
          "osType": { "value": "[variables('osType')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "numberVMs": { "value": "[variables('numVMs')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "[concat('routing',copyindex(1))]",
      "dependsOn": [ "Microsoft.Resources/deployments/nvas" ],
      "copy": {
        "name": "extensionCount",
        "count": "[variables('numVMs')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('extensionTemplate')]" },
        "parameters": {
          "vmName": { "value": "[concat(parameters('baseName'),'-',variables('vmNamePrefix'),copyindex(1),'-vm')]" },
          "fileUri": { "value": "[variables('scriptUri')]" },
          "scriptName": { "value": "[variables('scriptName')]" }
        }
      }
    }
  ],
  "outputs": {
    "udrName": {
      "type": "string",
      "value": "[variables('udrName')]"
    },
    "resourceGroup": {
      "type": "string",
      "value": "[resourceGroup().Name]"
    }
  }
}
